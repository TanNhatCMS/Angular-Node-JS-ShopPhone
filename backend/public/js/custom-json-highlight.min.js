function highlightJSON(s,c=0){const t=" ",l=t.repeat(c);function j(s,n){var p,a,e,r,o,n=n+1;return"string"==typeof s?`<span class="json-string">"${s}"</span>`:"number"==typeof s?`<span class="json-value">${s}</span>`:"boolean"==typeof s?`<span class="json-boolean">${s}</span>`:null===s?'<span class="json-null">null</span>':Array.isArray(s)?(a=n,0===(o=s).length?'<span class="json-brace">[]</span>':(e=`<span class="json-brace">[</span>
`+t.repeat(2*a),r=t.repeat(2*(a-1))+'<span class="json-brace">]</span>',o=o.map(s=>j(s,a)).join(",\n"+t.repeat(2*a)),e+o+`
`+t.repeat(c)+r)):"object"==typeof s?(e=s,p=n,0===Object.keys(e).length?'<span class="json-brace">{}</span>':(e=Object.entries(e).map(([s,n],a,e)=>{a=a===e.length-1?"":'<span class="json-comma">,</span>';return t.repeat(2*p)+`<span class="json-key">"${s}"</span>`+": "+j(n,p)+a}),o=t.repeat(2*(p-1))+'<span class="json-brace">}</span>',e=e.join("\n"+l),`<span class="json-brace">{</span>
${l}${e}
`+o)):s}return`<pre><code>${j(s,0)}</code></pre>`}